/*!

=========================================================
* Argon Dashboard PRO - v1.2.0
=========================================================

* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro
* Copyright 2020 Creative Tim (https://www.creative-tim.com)

* Coded by www.creative-tim.com

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

*/
"use strict";
var Layout = function () {
    function e() {
        $(".sidenav-toggler").addClass("active"), $(".sidenav-toggler").data("action", "sidenav-unpin"), $("body").removeClass("g-sidenav-hidden").addClass("g-sidenav-show g-sidenav-pinned"), $("body").append('<div class="backdrop d-xl-none" data-action="sidenav-unpin" data-target=' + $("#sidenav-main").data("target") + " />"), Cookies.set("sidenav-state", "pinned")
    }

    function a() {
        $(".sidenav-toggler").removeClass("active"), $(".sidenav-toggler").data("action", "sidenav-pin"), $("body").removeClass("g-sidenav-pinned").addClass("g-sidenav-hidden"), $("body").find(".backdrop").remove(), Cookies.set("sidenav-state", "unpinned")
    }

    var t = Cookies.get("sidenav-state") ? Cookies.get("sidenav-state") : "pinned";
    $(window).width() > 1200 && ("pinned" == t && e(), "unpinned" == Cookies.get("sidenav-state") && a(), $(window).resize(function () {
        $("body").hasClass("g-sidenav-show") && !$("body").hasClass("g-sidenav-pinned") && $("body").removeClass("g-sidenav-show").addClass("g-sidenav-hidden")
    })), $(window).width() < 1200 && ($("body").removeClass("g-sidenav-hide").addClass("g-sidenav-hidden"), $("body").removeClass("g-sidenav-show"), $(window).resize(function () {
        $("body").hasClass("g-sidenav-show") && !$("body").hasClass("g-sidenav-pinned") && $("body").removeClass("g-sidenav-show").addClass("g-sidenav-hidden")
    })), $("body").on("click", "[data-action]", function (t) {
        t.preventDefault();
        var n = $(this), i = n.data("action");
        n.data("target");
        switch (i) {
            case"sidenav-pin":
                e();
                break;
            case"sidenav-unpin":
                a();
                break;
            case"search-show":
                n.data("target"), $("body").removeClass("g-navbar-search-show").addClass("g-navbar-search-showing"), setTimeout(function () {
                    $("body").removeClass("g-navbar-search-showing").addClass("g-navbar-search-show")
                }, 150), setTimeout(function () {
                    $("body").addClass("g-navbar-search-shown")
                }, 300);
                break;
            case"search-close":
                n.data("target"), $("body").removeClass("g-navbar-search-shown"), setTimeout(function () {
                    $("body").removeClass("g-navbar-search-show").addClass("g-navbar-search-hiding")
                }, 150), setTimeout(function () {
                    $("body").removeClass("g-navbar-search-hiding").addClass("g-navbar-search-hidden")
                }, 300), setTimeout(function () {
                    $("body").removeClass("g-navbar-search-hidden")
                }, 500)
        }
    }), $(".sidenav").on("mouseenter", function () {
        $("body").hasClass("g-sidenav-pinned") || $("body").removeClass("g-sidenav-hide").removeClass("g-sidenav-hidden").addClass("g-sidenav-show")
    }), $(".sidenav").on("mouseleave", function () {
        $("body").hasClass("g-sidenav-pinned") || ($("body").removeClass("g-sidenav-show").addClass("g-sidenav-hide"), setTimeout(function () {
            $("body").removeClass("g-sidenav-hide").addClass("g-sidenav-hidden")
        }, 300))
    }), $(window).on("load resize", function () {
        $("body").height() < 800 && ($("body").css("min-height", "100vh"), $("#footer-main").addClass("footer-auto-bottom"))
    })
}(), Charts = function () {
    var e, a = $('[data-toggle="chart"]'), t = "light", n = {base: "Open Sans"}, i = {
        gray: {
            100: "#f6f9fc",
            200: "#e9ecef",
            300: "#dee2e6",
            400: "#ced4da",
            500: "#adb5bd",
            600: "#8898aa",
            700: "#525f7f",
            800: "#32325d",
            900: "#212529"
        },
        theme: {
            default: "#172b4d",
            primary: "#5e72e4",
            secondary: "#f4f5f7",
            info: "#11cdef",
            success: "#2dce89",
            danger: "#f5365c",
            warning: "#fb6340"
        },
        black: "#12263F",
        white: "#FFFFFF",
        transparent: "transparent"
    };

    function o(e, a) {
        for (var t in a) "object" != typeof a[t] ? e[t] = a[t] : o(e[t], a[t])
    }

    function s(e) {
        var a = e.data("add"), t = $(e.data("target")).data("chart");
        e.is(":checked") ? (!function e(a, t) {
            for (var n in t) Array.isArray(t[n]) ? t[n].forEach(function (e) {
                a[n].push(e)
            }) : e(a[n], t[n])
        }(t, a), t.update()) : (!function e(a, t) {
            for (var n in t) Array.isArray(t[n]) ? t[n].forEach(function (e) {
                a[n].pop()
            }) : e(a[n], t[n])
        }(t, a), t.update())
    }

    function l(e) {
        var a = e.data("update"), t = $(e.data("target")).data("chart");
        o(t, a), function (e, a) {
            if (void 0 !== e.data("prefix") || void 0 !== e.data("prefix")) {
                var t = e.data("prefix") ? e.data("prefix") : "", n = e.data("suffix") ? e.data("suffix") : "";
                a.options.scales.yAxes[0].ticks.callback = function (e) {
                    if (!(e % 10)) return t + e + n
                }, a.options.tooltips.callbacks.label = function (e, a) {
                    var i = a.datasets[e.datasetIndex].label || "", o = e.yLabel, s = "";
                    return a.datasets.length > 1 && (s += '<span class="popover-body-label mr-auto">' + i + "</span>"), s += '<span class="popover-body-value">' + t + o + n + "</span>"
                }
            }
        }(e, t), t.update()
    }

    return window.Chart && o(Chart, (e = {
        defaults: {
            global: {
                responsive: !0,
                maintainAspectRatio: !1,
                defaultColor: "dark" == t ? i.gray[700] : i.gray[600],
                defaultFontColor: "dark" == t ? i.gray[700] : i.gray[600],
                defaultFontFamily: n.base,
                defaultFontSize: 13,
                layout: {padding: 0},
                legend: {display: !1, position: "bottom", labels: {usePointStyle: !0, padding: 16}},
                elements: {
                    point: {radius: 0, backgroundColor: i.theme.primary},
                    line: {
                        tension: .4,
                        borderWidth: 4,
                        borderColor: i.theme.primary,
                        backgroundColor: i.transparent,
                        borderCapStyle: "rounded"
                    },
                    rectangle: {backgroundColor: i.theme.warning},
                    arc: {
                        backgroundColor: i.theme.primary,
                        borderColor: "dark" == t ? i.gray[800] : i.white,
                        borderWidth: 4
                    }
                },
                tooltips: {enabled: !0, mode: "index", intersect: !1}
            },
            doughnut: {
                cutoutPercentage: 83, legendCallback: function (e) {
                    var a = e.data, t = "";
                    return a.labels.forEach(function (e, n) {
                        var i = a.datasets[0].backgroundColor[n];
                        t += '<span class="chart-legend-item">', t += '<i class="chart-legend-indicator" style="background-color: ' + i + '"></i>', t += e, t += "</span>"
                    }), t
                }
            }
        }
    }, Chart.scaleService.updateScaleDefaults("linear", {
        gridLines: {
            borderDash: [2],
            borderDashOffset: [2],
            color: "dark" == t ? i.gray[900] : i.gray[300],
            drawBorder: !1,
            drawTicks: !1,
            drawOnChartArea: !0,
            zeroLineWidth: 0,
            zeroLineColor: "rgba(0,0,0,0)",
            zeroLineBorderDash: [2],
            zeroLineBorderDashOffset: [2]
        }, ticks: {
            beginAtZero: !0, padding: 10, callback: function (e) {
                if (!(e % 10)) return e
            }
        }
    }), Chart.scaleService.updateScaleDefaults("category", {
        gridLines: {
            drawBorder: !0,
            drawOnChartArea: !1,
            drawTicks: !0
        }, ticks: {padding: 20}, maxBarThickness: 60
    }), e)), a.on({
        change: function () {
            var e = $(this);
            e.is("[data-add]") && s(e)
        }, click: function () {
            var e = $(this);
            e.is("[data-update]") && l(e)
        }
    }), {colors: i, fonts: n, mode: t}
}(), CopyIcon = function () {
    var e, a = ".btn-icon-clipboard", t = $(a);
    t.length && ((e = t).tooltip().on("mouseleave", function () {
        e.tooltip("hide")
    }), new ClipboardJS(a).on("success", function (e) {
        $(e.trigger).attr("title", "Copied!").tooltip("_fixTitle").tooltip("show").attr("title", "Copy to clipboard").tooltip("_fixTitle"), e.clearSelection()
    }))
}(), Navbar = function () {
    var e = $(".navbar-nav, .navbar-nav .nav"), a = $(".navbar .collapse"), t = $(".navbar .dropdown");
    a.on({
        "show.bs.collapse": function () {
            var t;
            (t = $(this)).closest(e).find(a).not(t).collapse("hide")
        }
    }), t.on({
        "hide.bs.dropdown": function () {
            var e, a;
            e = $(this), (a = e.find(".dropdown-menu")).addClass("close"), setTimeout(function () {
                a.removeClass("close")
            }, 200)
        }
    })
}(), NavbarCollapse = function () {
    $(".navbar-nav");
    var e = $(".navbar .navbar-custom-collapse");
    e.length && (e.on({
        "hide.bs.collapse": function () {
            e.addClass("collapsing-out")
        }
    }), e.on({
        "hidden.bs.collapse": function () {
            e.removeClass("collapsing-out")
        }
    }))
}(), Popover = function () {
    var e = $('[data-toggle="popover"]'), a = "";
    e.length && e.each(function () {
        !function (e) {
            e.data("color") && (a = "popover-" + e.data("color"));
            var t = {
                trigger: "focus",
                template: '<div class="popover ' + a + '" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'
            };
            e.popover(t)
        }($(this))
    })
}(), ScrollTo = function () {
    var e = $(".scroll-me, [data-scroll-to], .toc-entry a");

    function a(e) {
        var a = e.attr("href"), t = e.data("scroll-to-offset") ? e.data("scroll-to-offset") : 0,
            n = {scrollTop: $(a).offset().top - t};
        $("html, body").stop(!0, !0).animate(n, 600), event.preventDefault()
    }

    e.length && e.on("click", function (e) {
        a($(this))
    })
}(), Tooltip = function () {
    var e = $('[data-toggle="tooltip"]');
    e.length && e.tooltip()
}(), Checklist = function () {
    var e = $('[data-toggle="checklist"]');

    function a(e) {
        e.is(":checked") ? e.closest(".checklist-item").addClass("checklist-item-checked") : e.closest(".checklist-item").removeClass("checklist-item-checked")
    }

    e.length && (e.each(function () {
        $(this).find('.checklist-entry input[type="checkbox"]').each(function () {
            a($(this))
        })
    }), e.find('input[type="checkbox"]').on("change", function () {
        a($(this))
    }))
}(), FormControl = function () {
    var e = $(".form-control");
    e.length && e.on("focus blur", function (e) {
        $(this).parents(".form-group").toggleClass("focused", "focus" === e.type)
    }).trigger("blur")
}(), color = "#5e72e4";

var DatatableBasic = function () {
    var e = $("#datatable-basic");
    e.length && e.on("init.dt", function () {
        $("div.dataTables_length select").removeClass("custom-select custom-select-sm")
    }).DataTable({
        keys: !0,
        select: {style: "multi"},
        language: {paginate: {previous: "<i class='fa fa-angle-left'>", next: "<i class='fa fa-angle-right'>"}}
    })
}(), DatatableButtons = function () {
    var e, a = $("#datatable-buttons");
    a.length && (e = {
        lengthChange: !0,
        dom: "Bfrtip",
        buttons: ["copy", "print"],
        language: {paginate: {previous: "<i class='fa fa-angle-left'>", next: "<i class='fa fa-angle-right'>"}}
    }, a.on("init.dt", function () {
        $(".dt-buttons .btn").removeClass("btn-secondary").addClass("btn-sm btn-default")
    }).DataTable(e))
}(), Dropzones = function () {
    var e = $('[data-toggle="dropzone"]'), a = $(".dz-preview");
    e.length && (Dropzone.autoDiscover = !1, e.each(function () {
        var e, t, n, i, o;
        e = $(this), t = void 0 !== e.data("dropzone-multiple"), n = e.find(a), i = void 0, o = {
            url: e.data("dropzone-url"),
            thumbnailWidth: null,
            thumbnailHeight: null,
            previewsContainer: n.get(0),
            previewTemplate: n.html(),
            maxFiles: t ? null : 1,
            acceptedFiles: t ? null : "image/*",
            init: function () {
                this.on("addedfile", function (e) {
                    !t && i && this.removeFile(i), i = e
                })
            }
        }, n.html(""), e.dropzone(o)
    }))
}(), Datepicker = function () {
    var e = $(".datepicker");
    e.length && e.each(function () {
        $(this).datepicker({disableTouchKeyboard: !0, autoclose: !0})
    })
}(), noUiSlider = function () {
    if ($(".input-slider-container")[0] && $(".input-slider-container").each(function () {
        var e = $(this).find(".input-slider"), a = e.attr("id"), t = e.data("range-value-min"),
            n = e.data("range-value-max"), i = $(this).find(".range-slider-value"), o = i.attr("id"),
            s = i.data("range-value-low"), l = document.getElementById(a), r = document.getElementById(o);
        noUiSlider.create(l, {
            start: [parseInt(s)],
            connect: [!0, !1],
            range: {min: [parseInt(t)], max: [parseInt(n)]}
        }), l.noUiSlider.on("update", function (e, a) {
            r.textContent = e[a]
        })
    }), $("#input-slider-range")[0]) {
        var e = document.getElementById("input-slider-range"),
            a = document.getElementById("input-slider-range-value-low"),
            t = document.getElementById("input-slider-range-value-high"), n = [a, t];
        noUiSlider.create(e, {
            start: [parseInt(a.getAttribute("data-range-value-low")), parseInt(t.getAttribute("data-range-value-high"))],
            connect: !0,
            range: {
                min: parseInt(e.getAttribute("data-range-value-min")),
                max: parseInt(e.getAttribute("data-range-value-max"))
            }
        }), e.noUiSlider.on("update", function (e, a) {
            n[a].textContent = e[a]
        })
    }
}(), Scrollbar = function () {
    var e = $(".scrollbar-inner");
    e.length && e.scrollbar().scrollLock()
}(), Fullcalendar = function () {
    var e, a, t = $('[data-toggle="calendar"]');
    t.length && (a = {
        header: {right: "", center: "", left: ""},
        buttonIcons: {prev: "calendar--prev", next: "calendar--next"},
        theme: !1,
        selectable: !0,
        selectHelper: !0,
        editable: 0,
        events: schoolEvents,
        dayClick: function (e) {
            var a = moment(e).toISOString();
            $("#new-event").modal("show"), $(".new-event--title").val(""), $(".new-event--start").val(a), $(".new-event--end").val(a)
        },
        viewRender: function (a) {
            console.log(a)
            e.fullCalendar("getDate").month(), $(".fullcalendar-title").html(a.title)
        },
        eventClick: function (e, a) {
            $("#edit-event input[value=" + e.className + "]").prop("checked", !0), $("#edit-event").modal("show"), $(".edit-event--id").val(e.id), $(".edit-event--title").val(e.title), $(".edit-event--start").val(e.start),
                $(".edit-event--end").val(e.end), $(".edit-event--class").val(e.class), $(".edit-event--section").val(e.section)
        }
    }, (e = t).fullCalendar(a),
        $("body").on("click", "[data-calendar-view]", function (a) {
        a.preventDefault(), $("[data-calendar-view]").removeClass("active"), $(this).addClass("active");
        var t = $(this).attr("data-calendar-view");
        e.fullCalendar("changeView", t)
    }), $("body").on("click", ".fullcalendar-btn-next", function (a) {
        a.preventDefault(), e.fullCalendar("next")
    }), $("body").on("click", ".fullcalendar-btn-prev", function (a) {
        a.preventDefault(), e.fullCalendar("prev")
    }))
}(), Lavalamp = function () {
    var e = $('[data-toggle="lavalamp"]');
    e.length && e.each(function () {
        $(this).lavalamp({setOnClick: !1, enableHover: !0, margins: !0, autoUpdate: !0, duration: 200})
    })
}(), SortList = function () {
    var e = $('[data-toggle="list"]'), a = $("[data-sort]");
    e.length && e.each(function () {
        var e;
        e = $(this), new List(e.get(0), function (e) {
            return {valueNames: e.data("list-values"), listClass: e.data("list-class") ? e.data("list-class") : "list"}
        }(e))
    }), a.on("click", function () {
        return !1
    })
}(), OnScreen = function () {
    var e, a = $('[data-toggle="on-screen"]');
    a.length && (e = {
        container: window, direction: "vertical", doIn: function () {
        }, doOut: function () {
        }, tolerance: 200, throttle: 50, toggleClass: "on-screen", debug: !1
    }, a.onScreen(e))
}(), QuillEditor = function () {
    var e = $('[data-toggle="quill"]');
    e.length && e.each(function () {
        var e, a;
        e = $(this), a = e.data("quill-placeholder"), new Quill(e.get(0), {
            modules: {toolbar: [["bold", "italic"], ["link", "blockquote", "code", "image"], [{list: "ordered"}, {list: "bullet"}]]},
            placeholder: a,
            theme: "snow"
        })
    })
}(), Select2 = function () {
    var e = $('[data-toggle="select"]');
    e.length && e.each(function () {
        $(this).select2({})
    })
}(), Tags = function () {
    var e = $('[data-toggle="tags"]');
    e.length && e.each(function () {
        $(this).tagsinput({tagClass: "badge badge-primary"})
    })
}();

